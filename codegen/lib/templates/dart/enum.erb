<%  has_string = entity.cases.all? { |c| !c.string.nil? } -%>
<%  type = entity.raw_type ? DartHelper.type(entity.raw_type) : 'int' -%>
enum <%= entity.name %> {
<%# Cases -%>
<%  entity.cases.each_with_index do |c, i| -%>
    <%= c.name %><% unless c.value.nil? %><% end %><% if i < entity.cases.size - 1 %>,<% else %><% end %>
<%  end -%>
}
<%# Value -%>
<%  if entity.cases.any? { |e| !e.value.nil? } -%>


<%= entity.name %>? create<%= entity.name %>FromValue(<%= type %> value) {
    switch (value) {
<%  entity.cases.each_with_index do |c, i| -%>
        case <% if type != 'int' %>(<%= type %>) <% end %><%= c.value %>: return <%= entity.name %>.<%= c.name %>;
<%  end -%>
        default: return null;
    }
}

<%  end -%>


abstract class <%= entity.name %>Base {

    <%# Property declarations -%>
    <%- entity.properties.each do |property| -%>
    <%-   if should_return_data(property) -%>
        public native byte[] <%= DartHelper.format_name(property.name) %>(<%= DartHelper.parameters(property.parameters.drop(1)) %>);
    <%-   else -%>
         <%= DartHelper.type(property.return_type) %> <%= DartHelper.format_name(property.name) %>(<%= DartHelper.parameters(property.parameters.drop(1)) %>);
    <%-   end -%>
    <%- end -%>
    <%# Method declarations -%>
    <%- entity.methods.each do |method| -%>
    <%-   next if method.name.start_with?('Delete') -%>
    <%-   if should_return_data(method) -%>
        public native byte[] <%= DartHelper.format_name(method.name) %>(<%= DartHelper.parameters(method.parameters.drop(1)) %>);
    <%-   else -%>
         <%= DartHelper.type(method.return_type) %> <%= DartHelper.format_name(method.name) %>(<%= DartHelper.parameters(method.parameters.drop(1)) %>);
    <%-   end -%>
    <%- end -%>
}

<%# toString -%>
    <%  if has_string -%>
    
extension <%= entity.name %>Ext on <%= entity.name %> {
    String stringName() {
        switch (this) {
    <%    entity.cases.each do |c| -%>
        case <%= entity.name %>.<%= c.name %>: return <%= c.string %>;
    <%    end -%>
        default: return "";
        }
    }
}
<%  end -%>